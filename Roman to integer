class Solution {
    public int romanToInt(String s) {
        int sum = 0; // To store the final integer value
        int m = s.length();

        for (int i = 0; i < m; i++) {
            // Get the value of the current symbol
            int current = getValue(s.charAt(i));

            // Check if the current value should be subtracted
            if (i < m - 1 && current < getValue(s.charAt(i + 1))) {
                sum -= current; // Subtract the value
            } else {
                sum += current; // Add the value
            }
        }
        return sum;
    }

    // Helper method to get the value of Roman numeral characters
    private int getValue(char ch) {
        switch (ch) {
            case 'I': return 1;
            case 'V': return 5;
            case 'X': return 10;
            case 'L': return 50;
            case 'C': return 100;
            case 'D': return 500;
            case 'M': return 1000;
            default:
                System.out.println("Not a valid Roman numeral: " + ch);
                return 0;
        }
    }
}
